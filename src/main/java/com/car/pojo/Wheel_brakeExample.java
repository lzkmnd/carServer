package com.car.pojo;

import java.util.ArrayList;
import java.util.List;

public class Wheel_brakeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public Wheel_brakeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNumIsNull() {
            addCriterion("Num is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("Num is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(String value) {
            addCriterion("Num =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(String value) {
            addCriterion("Num <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(String value) {
            addCriterion("Num >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(String value) {
            addCriterion("Num >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(String value) {
            addCriterion("Num <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(String value) {
            addCriterion("Num <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLike(String value) {
            addCriterion("Num like", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotLike(String value) {
            addCriterion("Num not like", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<String> values) {
            addCriterion("Num in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<String> values) {
            addCriterion("Num not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(String value1, String value2) {
            addCriterion("Num between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(String value1, String value2) {
            addCriterion("Num not between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeIsNull() {
            addCriterion("FrontBrakeType is null");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeIsNotNull() {
            addCriterion("FrontBrakeType is not null");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeEqualTo(String value) {
            addCriterion("FrontBrakeType =", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeNotEqualTo(String value) {
            addCriterion("FrontBrakeType <>", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeGreaterThan(String value) {
            addCriterion("FrontBrakeType >", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeGreaterThanOrEqualTo(String value) {
            addCriterion("FrontBrakeType >=", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeLessThan(String value) {
            addCriterion("FrontBrakeType <", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeLessThanOrEqualTo(String value) {
            addCriterion("FrontBrakeType <=", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeLike(String value) {
            addCriterion("FrontBrakeType like", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeNotLike(String value) {
            addCriterion("FrontBrakeType not like", value, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeIn(List<String> values) {
            addCriterion("FrontBrakeType in", values, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeNotIn(List<String> values) {
            addCriterion("FrontBrakeType not in", values, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeBetween(String value1, String value2) {
            addCriterion("FrontBrakeType between", value1, value2, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andFrontbraketypeNotBetween(String value1, String value2) {
            addCriterion("FrontBrakeType not between", value1, value2, "frontbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeIsNull() {
            addCriterion("RearBrakeType is null");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeIsNotNull() {
            addCriterion("RearBrakeType is not null");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeEqualTo(String value) {
            addCriterion("RearBrakeType =", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeNotEqualTo(String value) {
            addCriterion("RearBrakeType <>", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeGreaterThan(String value) {
            addCriterion("RearBrakeType >", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeGreaterThanOrEqualTo(String value) {
            addCriterion("RearBrakeType >=", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeLessThan(String value) {
            addCriterion("RearBrakeType <", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeLessThanOrEqualTo(String value) {
            addCriterion("RearBrakeType <=", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeLike(String value) {
            addCriterion("RearBrakeType like", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeNotLike(String value) {
            addCriterion("RearBrakeType not like", value, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeIn(List<String> values) {
            addCriterion("RearBrakeType in", values, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeNotIn(List<String> values) {
            addCriterion("RearBrakeType not in", values, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeBetween(String value1, String value2) {
            addCriterion("RearBrakeType between", value1, value2, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andRearbraketypeNotBetween(String value1, String value2) {
            addCriterion("RearBrakeType not between", value1, value2, "rearbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeIsNull() {
            addCriterion("ParkingBrakeType is null");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeIsNotNull() {
            addCriterion("ParkingBrakeType is not null");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeEqualTo(String value) {
            addCriterion("ParkingBrakeType =", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeNotEqualTo(String value) {
            addCriterion("ParkingBrakeType <>", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeGreaterThan(String value) {
            addCriterion("ParkingBrakeType >", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeGreaterThanOrEqualTo(String value) {
            addCriterion("ParkingBrakeType >=", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeLessThan(String value) {
            addCriterion("ParkingBrakeType <", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeLessThanOrEqualTo(String value) {
            addCriterion("ParkingBrakeType <=", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeLike(String value) {
            addCriterion("ParkingBrakeType like", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeNotLike(String value) {
            addCriterion("ParkingBrakeType not like", value, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeIn(List<String> values) {
            addCriterion("ParkingBrakeType in", values, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeNotIn(List<String> values) {
            addCriterion("ParkingBrakeType not in", values, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeBetween(String value1, String value2) {
            addCriterion("ParkingBrakeType between", value1, value2, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andParkingbraketypeNotBetween(String value1, String value2) {
            addCriterion("ParkingBrakeType not between", value1, value2, "parkingbraketype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeIsNull() {
            addCriterion("FrontTireType is null");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeIsNotNull() {
            addCriterion("FrontTireType is not null");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeEqualTo(String value) {
            addCriterion("FrontTireType =", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeNotEqualTo(String value) {
            addCriterion("FrontTireType <>", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeGreaterThan(String value) {
            addCriterion("FrontTireType >", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeGreaterThanOrEqualTo(String value) {
            addCriterion("FrontTireType >=", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeLessThan(String value) {
            addCriterion("FrontTireType <", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeLessThanOrEqualTo(String value) {
            addCriterion("FrontTireType <=", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeLike(String value) {
            addCriterion("FrontTireType like", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeNotLike(String value) {
            addCriterion("FrontTireType not like", value, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeIn(List<String> values) {
            addCriterion("FrontTireType in", values, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeNotIn(List<String> values) {
            addCriterion("FrontTireType not in", values, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeBetween(String value1, String value2) {
            addCriterion("FrontTireType between", value1, value2, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andFronttiretypeNotBetween(String value1, String value2) {
            addCriterion("FrontTireType not between", value1, value2, "fronttiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeIsNull() {
            addCriterion("RearTireType is null");
            return (Criteria) this;
        }

        public Criteria andReartiretypeIsNotNull() {
            addCriterion("RearTireType is not null");
            return (Criteria) this;
        }

        public Criteria andReartiretypeEqualTo(String value) {
            addCriterion("RearTireType =", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeNotEqualTo(String value) {
            addCriterion("RearTireType <>", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeGreaterThan(String value) {
            addCriterion("RearTireType >", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeGreaterThanOrEqualTo(String value) {
            addCriterion("RearTireType >=", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeLessThan(String value) {
            addCriterion("RearTireType <", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeLessThanOrEqualTo(String value) {
            addCriterion("RearTireType <=", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeLike(String value) {
            addCriterion("RearTireType like", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeNotLike(String value) {
            addCriterion("RearTireType not like", value, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeIn(List<String> values) {
            addCriterion("RearTireType in", values, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeNotIn(List<String> values) {
            addCriterion("RearTireType not in", values, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeBetween(String value1, String value2) {
            addCriterion("RearTireType between", value1, value2, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andReartiretypeNotBetween(String value1, String value2) {
            addCriterion("RearTireType not between", value1, value2, "reartiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeIsNull() {
            addCriterion("SpareTireType is null");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeIsNotNull() {
            addCriterion("SpareTireType is not null");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeEqualTo(String value) {
            addCriterion("SpareTireType =", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeNotEqualTo(String value) {
            addCriterion("SpareTireType <>", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeGreaterThan(String value) {
            addCriterion("SpareTireType >", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeGreaterThanOrEqualTo(String value) {
            addCriterion("SpareTireType >=", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeLessThan(String value) {
            addCriterion("SpareTireType <", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeLessThanOrEqualTo(String value) {
            addCriterion("SpareTireType <=", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeLike(String value) {
            addCriterion("SpareTireType like", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeNotLike(String value) {
            addCriterion("SpareTireType not like", value, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeIn(List<String> values) {
            addCriterion("SpareTireType in", values, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeNotIn(List<String> values) {
            addCriterion("SpareTireType not in", values, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeBetween(String value1, String value2) {
            addCriterion("SpareTireType between", value1, value2, "sparetiretype");
            return (Criteria) this;
        }

        public Criteria andSparetiretypeNotBetween(String value1, String value2) {
            addCriterion("SpareTireType not between", value1, value2, "sparetiretype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wheel_brake
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wheel_brake
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}