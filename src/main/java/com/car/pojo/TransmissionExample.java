package com.car.pojo;

import java.util.ArrayList;
import java.util.List;

public class TransmissionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transmission
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transmission
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transmission
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public TransmissionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transmission
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNumIsNull() {
            addCriterion("Num is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("Num is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(String value) {
            addCriterion("Num =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(String value) {
            addCriterion("Num <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(String value) {
            addCriterion("Num >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(String value) {
            addCriterion("Num >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(String value) {
            addCriterion("Num <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(String value) {
            addCriterion("Num <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLike(String value) {
            addCriterion("Num like", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotLike(String value) {
            addCriterion("Num not like", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<String> values) {
            addCriterion("Num in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<String> values) {
            addCriterion("Num not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(String value1, String value2) {
            addCriterion("Num between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(String value1, String value2) {
            addCriterion("Num not between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andAbbreviationIsNull() {
            addCriterion("Abbreviation is null");
            return (Criteria) this;
        }

        public Criteria andAbbreviationIsNotNull() {
            addCriterion("Abbreviation is not null");
            return (Criteria) this;
        }

        public Criteria andAbbreviationEqualTo(String value) {
            addCriterion("Abbreviation =", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationNotEqualTo(String value) {
            addCriterion("Abbreviation <>", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationGreaterThan(String value) {
            addCriterion("Abbreviation >", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationGreaterThanOrEqualTo(String value) {
            addCriterion("Abbreviation >=", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationLessThan(String value) {
            addCriterion("Abbreviation <", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationLessThanOrEqualTo(String value) {
            addCriterion("Abbreviation <=", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationLike(String value) {
            addCriterion("Abbreviation like", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationNotLike(String value) {
            addCriterion("Abbreviation not like", value, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationIn(List<String> values) {
            addCriterion("Abbreviation in", values, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationNotIn(List<String> values) {
            addCriterion("Abbreviation not in", values, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationBetween(String value1, String value2) {
            addCriterion("Abbreviation between", value1, value2, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andAbbreviationNotBetween(String value1, String value2) {
            addCriterion("Abbreviation not between", value1, value2, "abbreviation");
            return (Criteria) this;
        }

        public Criteria andBlocknumberIsNull() {
            addCriterion("BlockNumber is null");
            return (Criteria) this;
        }

        public Criteria andBlocknumberIsNotNull() {
            addCriterion("BlockNumber is not null");
            return (Criteria) this;
        }

        public Criteria andBlocknumberEqualTo(String value) {
            addCriterion("BlockNumber =", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberNotEqualTo(String value) {
            addCriterion("BlockNumber <>", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberGreaterThan(String value) {
            addCriterion("BlockNumber >", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberGreaterThanOrEqualTo(String value) {
            addCriterion("BlockNumber >=", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberLessThan(String value) {
            addCriterion("BlockNumber <", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberLessThanOrEqualTo(String value) {
            addCriterion("BlockNumber <=", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberLike(String value) {
            addCriterion("BlockNumber like", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberNotLike(String value) {
            addCriterion("BlockNumber not like", value, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberIn(List<String> values) {
            addCriterion("BlockNumber in", values, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberNotIn(List<String> values) {
            addCriterion("BlockNumber not in", values, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberBetween(String value1, String value2) {
            addCriterion("BlockNumber between", value1, value2, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andBlocknumberNotBetween(String value1, String value2) {
            addCriterion("BlockNumber not between", value1, value2, "blocknumber");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeIsNull() {
            addCriterion("TransmissionType is null");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeIsNotNull() {
            addCriterion("TransmissionType is not null");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeEqualTo(String value) {
            addCriterion("TransmissionType =", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeNotEqualTo(String value) {
            addCriterion("TransmissionType <>", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeGreaterThan(String value) {
            addCriterion("TransmissionType >", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeGreaterThanOrEqualTo(String value) {
            addCriterion("TransmissionType >=", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeLessThan(String value) {
            addCriterion("TransmissionType <", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeLessThanOrEqualTo(String value) {
            addCriterion("TransmissionType <=", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeLike(String value) {
            addCriterion("TransmissionType like", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeNotLike(String value) {
            addCriterion("TransmissionType not like", value, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeIn(List<String> values) {
            addCriterion("TransmissionType in", values, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeNotIn(List<String> values) {
            addCriterion("TransmissionType not in", values, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeBetween(String value1, String value2) {
            addCriterion("TransmissionType between", value1, value2, "transmissiontype");
            return (Criteria) this;
        }

        public Criteria andTransmissiontypeNotBetween(String value1, String value2) {
            addCriterion("TransmissionType not between", value1, value2, "transmissiontype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transmission
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transmission
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}